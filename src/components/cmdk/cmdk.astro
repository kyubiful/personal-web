---
import 'hotkeypad/index.css'

import { getLangFromUrl, useTranslations } from '@/i18n/utils'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

const translations = {
  actionTitle: t('cmdk.action.title'),
  printTitle: t('cmdk.action.print.title')
}
---

<div
  id='hotkeypad'
  data-placeholder='Hola'
  data-translate={JSON.stringify(translations)}
>
</div>

<script>
  interface Translations {
    actionTitle: string
    printTitle: string
  }

  import HotKeyPad from 'hotkeypad'

  const setHotkeypad = () => {
    const $darkIcon = document.getElementById('dark-icon')
    const $lightIcon = document.getElementById('light-icon')
    const hotkeypad = new HotKeyPad()

    const translations =
      hotkeypad.instance.getAttribute('data-translate') ?? '{}'

    const t: Translations = JSON.parse(translations)

    const theme = localStorage.getItem('theme')
    hotkeypad.instance.classList.add(theme ?? '')

    hotkeypad.setCommands([
      {
        section: t.actionTitle,
        id: 'print',
        title: t.printTitle,
        hotkey: `${hotkeypad.activationKey} + P`,
        handler: () => {
          window.print()
        }
      },
      {
        section: 'social',
        id: 'save',
        title: 'Save',
        hotkey: `${hotkeypad.activationKey} + S`,
        handler: () => {
          console.log('Save')
        }
      },
      {
        section: 'settings',
        id: 'settings',
        hotkey: `${hotkeypad.activationKey} + L`,
        title: 'Toggle theme',
        handler: () => {
          const body = document.querySelector('html')
          body?.classList.toggle('dark')
          const oldTheme = localStorage.getItem('theme')
          hotkeypad.instance.classList.remove(oldTheme ?? '')
          if (body?.classList.contains('dark')) {
            if ($darkIcon) {
              $darkIcon.style.display = 'block'
            }
            if ($lightIcon) {
              $lightIcon.style.display = 'none'
            }
            localStorage.setItem('theme', 'dark')
          } else {
            if ($darkIcon) {
              $darkIcon.style.display = 'none'
            }
            if ($lightIcon) {
              $lightIcon.style.display = 'block'
            }
            localStorage.setItem('theme', 'light')
          }

          const theme = localStorage.getItem('theme')
          hotkeypad.instance.classList.add(theme ?? '')
        }
      }
    ])
  }

  document.addEventListener('astro:after-swap', () => {
    setHotkeypad()
  })

  setHotkeypad()
</script>
